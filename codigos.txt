"Clusterização usando K-Médias, K-Medóides e Agrupamento Hierárquico"


OBJETIVO:
Agrupamento de dados (filmes) sem uma classe definida para encontrar insights neles que possam ser usados para resolver problemas de negócios (neste caso, seleção e criação de conteúdo).

DADOS:
Dados públicos disponibilizados pelo IMDb no site do Kaggle.


PARTE 1: CARREGAMENTO DE PACOTES & DATASET

```{r}
library(readxl)
library(dplyr)
library(ggplot2)
library(dummies)
library(corrplot)
library(tidyverse)
library(cluster)
library(factoextra)
library(fpc)
```

```{r}
Base_para_clustering_filmes <- read_excel("Base-para-clustering-filmes.xlsx")
```


PARTE 2: EXPLORAÇÃO E PADRONIZAÇÃO DOS DADOS

```{r}
str(Base_para_clustering_filmes)
```

```{r}
head(Base_para_clustering_filmes)
```

```{r}
summary(Base_para_clustering_filmes)
```

```{r}
any(is.na(Base_para_clustering_filmes))
```

```{r}
novoimdb= data.frame(Base_para_clustering_filmes, row.names = 1)
```

```{r}
Gen1dummy = dummy(novoimdb$Gen1)
```

```{r}
Gen2dummy = dummy(novoimdb$Gen2)
```

```{r}
Base_combinada = cbind(novoimdb[,c(-1,-2, -3, -4)], Gen1dummy, Gen2dummy)
```

```{r}
dadosnorm = data.frame(scale(Base_combinada))
```

PARTE 3: MODELAGEM DOS DADOS

AGRUPAMENTO COM K-MÉDIAS

Encontrando o nº ideal de Clusters com a métrica Silhouette
```{r}
silhuetemz = fviz_nbclust(dadosnorm, kmeans, method = c("silhouette", "wss", "gap_stat"))
plot(silhuetemz)
```

Número ideal de classes igual a 10
```{r}
silhuetemz$data
```

Aplicando o K-Médias com 10 classes, cujo Silhouette é 0.2453604
```{r}
agrkmeans = kmeans(dadosnorm, 10)
```

```{r}
agrkmeans$size
```

```{r}
barplot(agrkmeans$size, main = "Tamanho dos grupos usando K-Médias", col = "blue")
```

```{r}
par(mfrow=c(1,1))
clusplot(dadosnorm, agrkmeans$cluster, color = TRUE, labels = 2, lines = 0)
```

```{r}
fviz_cluster(agrkmeans, data = dadosnorm)
```

```{r}
Kmedias = agrkmeans$cluster
```

AGRUPAMENTO COM K-MEDÓIDES

```{r}
clusterspam = pam(dadosnorm, 10)
plot(clusterspam)
```

```{r}
par(mfrow=c(2,2))
clusterspam = pam(dadosnorm, 10)
ssp = silhouette(clusterspam$cluster, dist(dadosnorm))
mean(ssp[,3])
```

```{r}
clusterspam$clusinfo
```

```{r}
kmedoides = clusterspam$clustering
```

AGRUPAMENTOS HIERÁRQUICOS (AH)

USANDO SINGLE LINKAGE
```{r}
d = dist(dadosnorm, method = "euclidean")
fit = hclust(d, method = "single")

par(mfrow=c(1,1))
plot(fit)
groups = cutree(fit, k=10)
rect.hclust(fit, k=10, border = 2:12)
```

```{r}
sssi = silhouette(groups, dist(dadosnorm))
plot(sssi)
mean(sssi[,3])
```

USANDO AVERAGE LINKAGE
```{r}
d = dist(dadosnorm, method = "euclidean")
fita = hclust(d, method = "average")

par(mfrow=c(1,1))
plot(fita)
groupa = cutree(fita, k=10)
rect.hclust(fita, k=10, border= 2:12)
```

```{r}
ssav = silhouette(groupa, dist(dadosnorm))
plot(ssav)
mean(ssav[,3])
```

USANDO COMPLETE LINKAGE
```{r}
d = dist(dadosnorm, method = "euclidean")
fitc = hclust(d, method = "complete")

par(mfrow=c(1,1))
plot(fitc)
groupc = cutree(fitc, k=10)
rect.hclust(fitc, k=10, border= 2:12)
```

```{r}
ssco = silhouette(groupc, dist(dadosnorm))
plot(ssco)
mean(ssco[,3])
```

USANDO WARD.D
```{r}
d = dist(dadosnorm, method = "euclidean")
fitw = hclust(d, method = "ward.D")

par(mfrow=c(1,1))
plot(fitw)
groupw = cutree(fitw, k=10)
rect.hclust(fitw, k=10, border= 2:12)
```

```{r}
sscw = silhouette(groupw, dist(dadosnorm))
plot(sscw)
mean(sscw[,3])
```

PARTE 4: COMBINANDO E SALVANDO TUDO
```{r}
clusterizacao= cbind(novoimdb, Kmedias, kmedoides, groups, groupa, groupc, groupw)
```

```{r}
write_delim(clusterizacao, "Agrupamentos-finais", delim = ";")
getwd()
```
